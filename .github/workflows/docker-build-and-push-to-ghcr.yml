name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - master # Or your default branch like 'master'
    paths:
      - 'Dockerfile' # Always trigger if your Dockerfile changes
      # - '.github/workflows/your-workflow-file.yml' # Trigger if this workflow file changes itself
      # Add more specific paths if needed, e.g., 'src/php/**' or 'config/cscart_config.php'

env:
  IMAGE_NAME: ${{ github.repository }} # The name of your Docker image
  REGISTRY: ghcr.io # Explicitly define GHCR registry URL for clarity and safety

jobs:
  build-and-push:
    runs-on: ubuntu-latest # GitHub-hosted runner

    permissions:
      contents: read # Allow reading repository contents
      packages: write # Allow writing to GitHub Packages (GHCR)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # This step initializes a Buildx builder that supports the GHA cache.

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # Uses the GitHub user who triggered the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # Built-in token for GitHub Actions

      - name: Set Docker tag
        id: tag
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" || "${GITHUB_REF_NAME}" == "master" ]]; then
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Build context is the root of the repository
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${DOCKER_TAG}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha # Use GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max # Store build cache

      - name: Verify pushed image (Optional)
        run: |
          echo "Image pushed successfully to GHCR:"
          echo "${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:latest"
          # You can add a 'docker pull' here to verify, but usually 'build-push-action' is sufficient.
